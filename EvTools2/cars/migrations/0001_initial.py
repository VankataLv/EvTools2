# Generated by Django 5.1.1 on 2024-09-03 15:40

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='First name must start with a capital letter and contain only lowercase letters, apostrophes, or hyphens. Length must be between 2 to 50 characters.', regex="^[A-Z][a-z'’-]{1,49}$")])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='First name must start with a capital letter and contain only lowercase letters, apostrophes, or hyphens. Length must be between 2 to 50 characters.', regex="^[A-Z][a-z'’-]{1,49}$")])),
                ('nickname', models.CharField(help_text='Enter a nickname between 3 and 30 characters.Only letters, numbers, underscores, and hyphens are allowed.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator(message='Nickname must be between 3 and 30 characters long and can include letters, numbers, underscores, and hyphens.', regex='^[A-Za-z0-9_-]{3,30}$')])),
                ('phone_number', models.CharField(help_text='Enter a phone number. No dashes, slashes or spaces are allowed. Your number will be displayed only of you decide', max_length=16, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be between 9 and 12 digits long, can start with +, no spaces, slashes and dashes.', regex='^\\+?(\\d+){9,}$')])),
                ('email', models.EmailField(help_text='Enter a valid email address. Your email will be displayed only of you decide', max_length=50, unique=True, validators=[django.core.validators.RegexValidator(message='Invalid email address.', regex='^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$')])),
                ('image_url', models.URLField(blank=True, null=True)),
                ('created_on', models.DateField(auto_now_add=True)),
                ('banned', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.carbrand')),
            ],
        ),
        migrations.CreateModel(
            name='EVCar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2024)])),
                ('asking_price', models.IntegerField(help_text='Price in EUR. Only whole numbers', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('mileage', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000000)])),
                ('battery_capacity', models.DecimalField(decimal_places=2, max_digits=5)),
                ('horsepower', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1000)])),
                ('range', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10000)])),
                ('drivetrain', models.CharField(choices=[('FWD', 'Front-wheel drive'), ('RWD', 'Rear-wheel drive'), ('AWD', 'All-wheel drive')], default='unknown', max_length=15)),
                ('body_type', models.CharField(choices=[('Sedan', 'Sedan'), ('Hatch', 'Hatchback'), ('Station wagon', 'Station wagon'), ('Coupe', 'Coupe')], default='unknown', max_length=15)),
                ('color', models.CharField(choices=[('White', 'White'), ('Black', 'Black'), ('Red', 'Red'), ('Blue', 'Blue'), ('Orange', 'Orange'), ('Yellow', 'Yellow'), ('Green', 'Green'), ('Gray', 'Gray')], default='unknown', max_length=15)),
                ('description', models.TextField()),
                ('doors', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6)], default=4)),
                ('vin', models.CharField(default='unknown', max_length=50)),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.carbrand')),
                ('model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.carmodel')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='cars.user')),
            ],
        ),
    ]
